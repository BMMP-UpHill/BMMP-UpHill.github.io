{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,aAAa,GAAG,KAAK,CAAC;;AAE1B,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,gBAAQ,EAAE,IAAI;KAWjB;;;;;;;;;;;;AAED,gBAAY,EAAE,wBAAU;;AAEpB,YAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,YAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;AAED,kBAAc,EAAE,wBAAS,MAAM,EAAE,IAAI,EAAC;AAClC,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,eAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,eAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,YAAG,CAAC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC/B;;AAED,oBAAgB,EAAE,4BAAY;AAC1B,YAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAC7C,mBAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,gBAAG,CAAC,aAAa,EAAC;AACd,oBAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,6BAAa,GAAG,IAAI,CAAC;aACxB;AACD,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB,MACI;AACD,mBAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC/B;KACJ;;AAED,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,WAAW,EACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC/B;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var alreadyKilled = false;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isDeadly: true,\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    switchDeadly: function(){\r\n        //console.log('isDeadly: ', this.isDeadly);\r\n        this.isDeadly = !this.isDeadly;\r\n        this.hasKilled = false;\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.isDeadly = true;\r\n        this.playerOnTop = false;\r\n    },\r\n\r\n    onStepCallback: function(player, game){\r\n        this.player = player;\r\n        this.playerOnTop = true;\r\n        console.log('M: Onstep Spike');\r\n        console.log('OnS isDeadly: ', this.isDeadly);\r\n        if(!this.hasKilled)\r\n            this.performSpikeKill();\r\n    },\r\n\r\n    performSpikeKill: function () {\r\n        if (!this.isDeadly && !this.player.isInvincible) {\r\n            console.log('Uups, das war tötlich');\r\n            if(!alreadyKilled){\r\n                this.player.kill();\r\n                alreadyKilled = true;\r\n            }\r\n            this.hasKilled = true;\r\n        }\r\n        else {\r\n            console.log('Glück gehabt');\r\n        }\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.playerOnTop)\r\n            this.performSpikeKill();\r\n    },\r\n});\r\n"
  ]
}