{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;;AAE9C,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,oBAAY,EAAE;AACV,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,kBAAU,EAAE;AACR,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;;AAED,mBAAW,EAAE;AACT,uBAAS,IAAI;AACb,eAAG,EAAE,EAAE,CAAC,SAAS;SACpB;;AAED,YAAI,EAAE;AACF,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;KAGJ;;;AAGD,UAAM,EAAE,kBAAY;;;;AAIhB,YAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAClD,eAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACzD,YAAG,IAAI,CAAC,UAAU,KAAK,IAAI,EAAC;AACxB,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5B,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC/D;AACD,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACvB;;AAGD,wBAAoB,EAAE,gCAAU;;AAE5B,YAAG,IAAI,CAAC,MAAM,EAAC;AACX,gBAAI,CAAC,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC;AAC9B,cAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,gBAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;;AAEpC,cAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpB,MAAM;AACH,gBAAI,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,CAAC;AAChC,cAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACpB,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,gBAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;AACnC,cAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpB;;AAED,UAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KAEtD;;AAED,wBAAoB,EAAE,gCAAU;AAC5B,UAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACnC,UAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KAEtD;;AAED,uBAAmB,EAAE,+BAAU;AAC3B,YAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;AAClC,UAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACnC,UAAE,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KAEtD;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const GameState = require('States').GameState;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pauseOverlay: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        \r\n        buttonAudio: {\r\n            default: null,\r\n            url: cc.AudioClip,\r\n        },\r\n\r\n        game: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        /*if(game !== undefined)\r\n            this.scoreLabel.string = \"Score: \"+game.getComponent('Game').score.toString();\r\n            */\r\n        this.score = cc.sys.localStorage.getItem('score');\r\n        console.log('Score in GameButtonCallback: ', this.score);\r\n        if(this.scoreLabel !== null){\r\n            console.log('SCORELABEL');\r\n            console.log(this.scoreLabel);\r\n             this.scoreLabel.string = \"Score: \" + this.score.toString();\r\n        }\r\n        this.paused = false; // TODO: spread this to the outer world\r\n    },\r\n\r\n\r\n    pauseControlCallback: function(){\r\n        //TODO: change pause button to different sprite\r\n        if(this.paused){\r\n            this.pauseOverlay.opacity = 0;\r\n            cc.director.resume();\r\n            this.paused = false;\r\n            this.game.state = GameState.Playing;\r\n\r\n            cc.log(\"resume\");\r\n        } else {\r\n            this.pauseOverlay.opacity = 255;\r\n            cc.director.pause();\r\n            this.paused = true;\r\n            this.game.state = GameState.Paused;\r\n            cc.log(\"paused\");\r\n        } \r\n\r\n        cc.audioEngine.playEffect(this.buttonAudio, false);\r\n\r\n    },\r\n\r\n    againControlCallback: function(){\r\n        cc.director.loadScene('GameScene');\r\n        cc.audioEngine.playEffect(this.buttonAudio, false);\r\n\r\n    },\r\n\r\n    backControlCallback: function(){\r\n        this.game.state = GameState.Ended;\r\n        cc.director.loadScene('Startmenu');\r\n        cc.audioEngine.playEffect(this.buttonAudio, false);\r\n\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}