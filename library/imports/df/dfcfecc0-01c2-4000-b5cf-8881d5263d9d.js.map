{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const GameState = require('States').GameState;\r\nconst PlayerMovementState = require('States').PlayerMovementState;\r\nconst PlayerState = require('States').PlayerState;\r\n\r\nconst explodetime = 0.2;\r\nconst riseDeathY = 25;\r\n\r\n\r\nvar animationNeedsUpdate = false;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // Player spawns in a standing state\r\n        movestate: {\r\n            default: PlayerMovementState.Standing,\r\n            type: PlayerMovementState\r\n        },\r\n\r\n        isInvincible: false, // Player picked up an item which made him unkillable\r\n        isPoisoned: false,\r\n        isAlive: false,\r\n        isSwaped: false,    //Player stands on a Switcher //TODO: nutzlos da nie verwendet in player\r\n        \r\n        poisonTimer: 0,\r\n        invincibiltyTimer: 0,\r\n\r\n        dir: 0, // Next Position player is jumping to 1 : left  -1: right\r\n\r\n        arrayPosX: 0, //Position in the array given with row and column\r\n        arrayPosY: 0,\r\n\r\n        jumpTime: 0, // Time for jumping action to run\r\n        fallTime: 0, // same: falling \r\n        \r\n        // Atlas holdin all sprites of the player. \r\n        playeratlas:{\r\n            default: null,\r\n            type:cc.SpriteAtlas,\r\n        },\r\n\r\n\r\n        // Player Audios\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\r\n        deathAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\r\n        fallAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n        \r\n        drinkAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\r\n        poisonedAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n\r\n        // Game reference to pass player\r\n        game: {\r\n        \tdefault: null,\r\n        \ttype: cc.Node,\r\n        },\r\n\r\n        \r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //register player at game for processing player logic \r\n        this.game.getComponent('Game').player = this;\r\n\r\n        //Init timers\r\n        this.poisonTmp = this.poisonTimer;\r\n        this.invincibiltyTmp = this.invincibiltyTimer; //Henri fragen ob man properties speichern kann\r\n\r\n        this.movestate = PlayerMovementState.Standing;\r\n        this.isMoving = false;\r\n        this.isAlive = true;\r\n        //this.oldDest = this.game.getComponent('Game').gamefield.gameField[gameField.length-1][3];\r\n\r\n        this.offsetY = this.node.getContentSize().height/2; // Offset to set the player on top of blocks\r\n        this.destinationpos = cc.p(0,0);\r\n\r\n        //Load data relevant to player   -- !! LEAVE AT END OF THIS FUNCTION !! --\r\n        this.game.getComponent('Game').onPlayerLoadCallback();\r\n\r\n    },\r\n\r\n    kill : function(){\r\n        this.isInvincible = false;\r\n        this.isAlive = false;\r\n        var gamestatecallback = cc.callFunc(this.changeGameState,this);\r\n        var soundcallback = cc.callFunc(this.playSound,this);\r\n        this.node.runAction(cc.sequence(cc.spawn(this.deform(),this.assembleAction()), gamestatecallback, soundcallback));\r\n        cc.audioEngine.stopAllEffects(); //TODO evtl als callback\r\n\r\n    },\r\n\r\n    fall: function(){\r\n        this.isInvincible = false;\r\n        this.movestate = PlayerMovementState.Falling;\r\n        var gamestatecallback = cc.callFunc(this.changeGameState,this);\r\n        var soundcallback = cc.callFunc(this.playSound,this);\r\n        this.node.runAction(cc.sequence(cc.spawn(this.deform(),this.assembleAction()), gamestatecallback, soundcallback));\r\n        this.isAlive = false; //set here because alive impacts death anim.\r\n        cc.audioEngine.stopAllEffects();\r\n\r\n    },\r\n\r\n    changeGameState: function(){\r\n        if (this.isAlive || this.movestate === PlayerMovementState.Falling)\r\n            this.game.getComponent('Game').state = GameState.GameOver;\r\n\r\n    },\r\n\r\n    changePlayerState: function(){\r\n        switch(this.movestate){\r\n            case PlayerMovementState.Jumping:\r\n                this.movestate = PlayerMovementState.Standing;\r\n            break;\r\n        }\r\n    },\r\n\r\n    blockStepped: function (player, game) {\r\n        this.gAme = game;\r\n        var steppedBlock = this.destfield.getComponent(this.destfield.name);\r\n        console.log('STEPPED BLOCK: ', steppedBlock);\r\n        console.log(this.destfield.name);\r\n        steppedBlock.onStepCallback(this, game);\r\n        var item = steppedBlock.getComponentInChildren('Item');\r\n        if(item !== null)\r\n            item.onPickUpCallback(this, this.gAme);\r\n    },\r\n    //\r\n    // Movement and Actions\r\n    //\r\n    \r\n    //Called everytime a the figure is moved by pressing A or D\r\n    move : function(destfield, game){\r\n        if(this.isAlive === false) return;\r\n        this.oldDest = this.destfield;\r\n        this.destfield = destfield; // Direction players wants to move the figure(-1 or 1)\r\n        switch(this.movestate){\r\n            case PlayerMovementState.Standing:\r\n                this.movestate = PlayerMovementState.Jumping;\r\n\r\n                var soundCallback = cc.callFunc(this.playSound, this);\r\n                var playerstateCallback = cc.callFunc(this.changePlayerState, this);\r\n                var blockstepCallback = cc.callFunc(this.blockStepped, this, game);\r\n                this.switchPlayerAppearance();\r\n                this.setDestinationPos();\r\n\r\n                this.node.runAction(cc.sequence(cc.spawn(this.deform(), this.assembleAction()), blockstepCallback, soundCallback, playerstateCallback));\r\n            break;\r\n\r\n            case PlayerMovementState.Jumping:\r\n            case PlayerMovementState.Falling:\r\n            return;\r\n        } \r\n    },\r\n\r\n    setDestinationPos: function(){\r\n        this.destinationpos.x = this.destfield.getPositionX();\r\n        this.destinationpos.y = this.destfield.getPositionY()+ this.offsetY;\r\n    },\r\n\r\n    switchPlayerAppearance: function () {\r\n        this.updated = this.updateAnimation();\r\n        if(this.updated) // if animations is running dont go to sprite frame changing\r\n            return;\r\n        if (this.dir < 0) { // Player looks left\r\n            this.getComponent(cc.Sprite).spriteFrame = this.playeratlas.getSpriteFrame(\"player_left\");\r\n        } else {\r\n            this.getComponent(cc.Sprite).spriteFrame = this.playeratlas.getSpriteFrame(\"player_right\");\r\n        }\r\n    },\r\n\r\n    assembleAction : function(){\r\n        if (this.isAlive === false) //Player dead -> action TODO: versaut fallen animation\r\n            return cc.moveBy(explodetime, cc.p(0,riseDeathY));\r\n\r\n        switch(this.movestate){\r\n            case PlayerMovementState.Standing:\r\n                break;\r\n            case PlayerMovementState.Falling:\r\n                return cc.moveTo(this.fallTime, cc.p(this.node.getPosition().x,0)).easing(cc.easeCubicActionIn());\r\n                \r\n            case PlayerMovementState.Jumping:\r\n                // Points forming the beziercurve\r\n                var bezier = [this.node.getPosition() , this.destinationpos , this.destinationpos];\r\n                return cc.bezierTo(this.jumpTime, bezier);\r\n        }\r\n        \r\n    },\r\n\r\n    deform: function () {\r\n        if (this.isAlive === false) //Player dead -> deform\r\n            return cc.sequence(cc.scaleTo(explodetime, 1.3, 1.3), cc.scaleTo(explodetime, 0.0, 0.0));\r\n    \r\n        switch (this.movestate) { // Player in a moving state -> action\r\n\r\n            case PlayerMovementState.Jumping:\r\n                var scaletime = this.jumpTime * 0.5;\r\n                return cc.sequence(cc.scaleTo(scaletime, 1, 1.1), cc.scaleTo(scaletime, 1, 0.9), cc.scaleTo(scaletime, 1, 1.0));\r\n\r\n            case PlayerMovementState.Falling:\r\n                this.node.setLocalZOrder(this.destfield.getLocalZOrder()); //TODO: fall wird schon während des jumps ausgeführt -> spieler verschwindet hinter vorbeigesprungenen blöcken\r\n                var fallDeform = cc.scaleTo(this.fallTime, 0.85, 0.85);\r\n                var fallfade = cc.fadeOut(this.fallTime * 4);\r\n                return cc.spawn(fallDeform, fallfade.easing(cc.easeCubicActionOut()));\r\n        }\r\n        // Might be useful sometime\r\n        if (this.isPoisoned)\r\n            return null;\r\n\r\n        if (this.isInvincible)\r\n            return null;\r\n    },\r\n        \r\n\r\n\r\n    // \r\n    //  Sounds\r\n    //\r\n    \r\n    playSound: function () {\r\n        if(!this.isAlive){\r\n            cc.audioEngine.playEffect(this.deathAudio, false);\r\n            return;\r\n        }\r\n\r\n        if(this.isPoisoned)\r\n            cc.audioEngine.playEffect(this.poisonedAudio, false);\r\n\r\n        switch(this.movestate){\r\n            case PlayerMovementState.Jumping:\r\n                cc.audioEngine.playEffect(this.jumpAudio, false);\r\n            break;\r\n            case PlayerMovementState.Falling:\r\n                cc.audioEngine.playEffect(this.fallAudio, false);\r\n            break;\r\n\r\n        }\r\n    },\r\n    \r\n    \r\n    //\r\n    // Status and Update of player\r\n    //\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this.isAlive) {\r\n            this.updateTimers(dt);\r\n            //this.updateAnimation();\r\n        }\r\n    },\r\n\r\n    updateAnimation: function () {\r\n        if(!this.animation) // Init animation \r\n            this.animation = this.getComponent(cc.Animation);\r\n        if ((!this.isPoisoned && !this.isInvincible)) { //NICE TO HAVE: no bools\r\n            this.animation.stop();\r\n            return false;\r\n        }\r\n\r\n        if ((this.isPoisoned || this.isInvincible))\r\n            this.animation.play(this.getAnimation());\r\n            return true;\r\n    },\r\n\r\n\r\n    updateTimers : function(dt){\r\n        if(this.isPoisoned)\r\n            if(this.poisonTmp <= 0){ //timer ran out -> kill player\r\n                this.isPoisoned = false;\r\n                this.isAlive = false;\r\n                this.kill();\r\n            } else {\r\n                this.poisonTmp -= dt; //decrease timer...hurry!\r\n            }\r\n\r\n        if(this.isInvincible)\r\n            if(this.invincibiltyTmp <= 0){ //timer ran out -> downrank player\r\n                this.isInvincible = false;\r\n                this.invincibiltyTmp = this.invincibiltyTimer;\r\n            } else {\r\n                this.invincibiltyTmp  -= dt; //decrease timer...hurry!\r\n            }\r\n    },\r\n    \r\n    isMoving : function(){\r\n        switch(this.movestate){ //switch for possible further states\r\n            case PlayerMovementState.Jumping:\r\n                this.isMoving = true;\r\n            return true;\r\n\r\n            case PlayerMovementState.Standing:\r\n            return false;\r\n        } \r\n    },\r\n    \r\n    isAlive : function(){\r\n        return isAlive;\r\n    },\r\n    \r\n    getAnimation: function(){\r\n        if (this.dir < 0) {\r\n            if (this.isPoisoned) {\r\n                return 'poison_left_anim';//play('poison_left_anim');\r\n            }\r\n\r\n            if (this.isInvincible) {\r\n                return 'star_left_anim';//play('poison_left_anim');\r\n            }\r\n        } else {\r\n            if (this.isPoisoned) {\r\n                return 'poison_right_anim';//play('poison_left_anim');\r\n            }\r\n\r\n            if (this.isInvincible) {\r\n                return 'star_right_anim';//play('poison_left_anim');\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    makeInvincible: function(){\r\n        this.isInvincible = true;\r\n        //TODO: start invincibility timer\r\n    },\r\n\r\n    poison: function(){\r\n        this.isPoisoned = true;\r\n        //TODO: start poison timer and killing phase if turn based poison is neglected\r\n    },\r\n\r\n    shot : function(){\r\n\r\n    },*/\r\n});\r\n"
  ]
}