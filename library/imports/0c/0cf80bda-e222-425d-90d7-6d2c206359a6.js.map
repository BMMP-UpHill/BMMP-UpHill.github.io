{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const BlockType = require('Types').BlockType;\r\nconst PlayerMovementState = require('States').PlayerMovementState;\r\n\r\n\r\nvar tempParent;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isBlocked: false,\r\n        hasItem: false,\r\n        isDeadly: false,\r\n\r\n        blocktype: {\r\n            default: BlockType.None,\r\n            type: BlockType,\r\n        },\r\n\r\n        item: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n\r\n        onSteppedSound: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n       \r\n        defaultSound: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //If block has animation load it\r\n        var anim = this.node.getComponent(cc.Animation);\r\n        if(anim !== null || undefined)\r\n            this.anim = anim;\r\n        //Initalize Block coressponding to its type\r\n        switch (this.blocktype) {\r\n            case BlockType.Spike:\r\n                this.hasKilled = false;\r\n            case BlockType.Trapdoor:\r\n            case BlockType.Empty:\r\n                this.isDeadly = true;\r\n                break;\r\n            case BlockType.Dirt:\r\n            case BlockType.Gras:\r\n            case BlockType.Switcher:\r\n            case BlockType.Poison:\r\n                break;\r\n        }\r\n    },\r\n\r\n    //What happens if you step on a block\r\n    onStepCallback: function(player, game){\r\n        this.player = player;\r\n        // Perform the action the block produces(change player or environment)\r\n        switch(this.blocktype){\r\n            case BlockType.Dirt:\r\n            case BlockType.Gras:\r\n                break;\r\n            case BlockType.Empty:\r\n                    this.player.fall();\r\n                break;\r\n            case BlockType.Switcher:\r\n                    this.player.isSwaped = true;\r\n                break;\r\n            case BlockType.Trapdoor:\r\n                    this.anim.play('trapdoor');\r\n                    this.player.fall();\r\n                break;\r\n            case BlockType.Poison:\r\n                    if (!this.player.isInvincible)\r\n                        this.player.isPoisoned = true;\r\n                break;\r\n            case BlockType.Spike:\r\n                    this.playerOnTop = true;\r\n                    if (!this.hasKilled)\r\n                        this.performSpikeKill();\r\n                break;\r\n        }\r\n\r\n        // Perform block animation\r\n        var stepFinishedCallback = cc.callFunc(this.finishStep, this);\r\n        //var blockaction = cc.spawn(this.assembleBlockAction(), this.deform());\r\n        this.node.runAction(cc.sequence(this.shake() , stepFinishedCallback ) );\r\n        this.player.node.runAction(this.shake());\r\n    },\r\n\r\n    //Let blocks shake when they are stepped on (including player)\r\n    shake: function () {\r\n        var down = cc.moveBy(0.2, cc.p(0, - 2)).easing(cc.easeCubicActionIn());\r\n        var up = cc.moveBy(0.2, cc.p(0, + 2)).easing(cc.easeCubicActionIn());\r\n        var shake = cc.sequence(down,up);\r\n        return shake;\r\n    },\r\n\r\n    finishStep: function () {\r\n\r\n    },\r\n\r\n    // Action(Animation etc) for every block\r\n    assembleBlockAction: function () {\r\n        switch (this.blocktype) {\r\n            case BlockType.Empty:\r\n            case BlockType.Dirt:\r\n            case BlockType.Gras:\r\n            case BlockType.Switcher:\r\n            case BlockType.Poison:\r\n            case BlockType.Spike:\r\n                return cc.moveTo(0, this.node.getPosition());\r\n            case BlockType.Trapdor:\r\n                return cc.moveTo(1, cc.p(this.node.getPositionX(), this.node.getPositionY() - 100))\r\n        }\r\n\r\n    },\r\n\r\n    // Part of animation see above\r\n    deform: function () {\r\n        switch (this.blocktype) {\r\n            case BlockType.Empty:\r\n            case BlockType.Dirt:\r\n            case BlockType.Gras:\r\n            case BlockType.Switcher:\r\n            case BlockType.Trapdoor:\r\n            case BlockType.Poison:\r\n            case BlockType.Spike:\r\n                return cc.moveTo(0, this.node.getPosition());\r\n        }\r\n\r\n    },\r\n\r\n    performSpikeKill: function () {\r\n        if (!this.isDeadly && !this.player.isInvincible) {\r\n            if(!this.hasKilled){\r\n                this.player.kill();\r\n                this.hasKilled = true;\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    },\r\n\r\n    destroy: function(){\r\n        this.node.destroy();\r\n    },\r\n\r\n    setBlocked: function(bool){\r\n        this.isBlocked = bool;  \r\n    },\r\n    \r\n    isBlocked: function(){\r\n        return this.isBlocked;  \r\n    },\r\n    \r\n    switchDeadly: function(){\r\n        //console.log('isDeadly: ', this.isDeadly);\r\n        this.isDeadly = !this.isDeadly;\r\n        this.hasKilled = false;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.playerOnTop)\r\n            this.performSpikeKill();\r\n    },\r\n});\r\n"
  ]
}