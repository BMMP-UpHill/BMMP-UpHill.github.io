{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;AAC7C,IAAM,mBAAmB,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC;;AAElE,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,iBAAS,EAAE,KAAK;AAChB,eAAO,EAAE,KAAK;;AAEd,iBAAS,EAAE;AACP,uBAAS,SAAS,CAAC,IAAI;AACvB,gBAAI,EAAE,SAAS;SAClB;;AAED,YAAI,EAAE;AACF,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;KACJ;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;;AAGD,kBAAc,EAAE,wBAAS,MAAM,EAAC;;AAE5B,gBAAO,IAAI,CAAC,SAAS;AACjB,iBAAK,SAAS,CAAC,KAAK;AACZ,sBAAM,CAAC,IAAI,EAAE,CAAC;AAClB,sBAAM;AAAA,SACb;;;AAGD,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAEnD;;;AAGF,uBAAmB,EAAG,+BAAU;AAC3B,gBAAO,IAAI,CAAC,SAAS;AACjB,iBAAK,SAAS,CAAC,KAAK;AAChB,uBAAO,EAAE,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;;AAAA,AAEhD,iBAAK,SAAS,CAAC,OAAO;AAClB,uBAAO,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAC,GAAG,CAAC,CAAC,CAAA;AAAA,SACxF;KAEJ;;;AAGD,UAAM,EAAE,kBAAU,EAEjB;;AAED,WAAO,EAAE,mBAAU;AACf,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACvB;;AAED,cAAU,EAAE,oBAAS,IAAI,EAAC;AACtB,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;AAED,aAAS,EAAE,qBAAU;AACjB,eAAO,IAAI,CAAC,SAAS,CAAC;KACzB;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const BlockType = require('Types').BlockType;\r\nconst PlayerMovementState = require('States').PlayerMovementState;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isBlocked: false,\r\n        hasItem: false,\r\n        \r\n        blocktype: {\r\n            default: BlockType.None,\r\n            type: BlockType,\r\n        },\r\n\r\n        item: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n\r\n    //What happens if you step on a block\r\n    onStepCallback: function(player){\r\n        // Perform the action the block produces(change player or environment)\r\n        switch(this.blocktype){\r\n            case BlockType.Empty:\r\n                    player.fall();\r\n                break;\r\n        }\r\n\r\n        // Perform block animation\r\n        this.node.runAction(this.assembleBlockAction());\r\n        \r\n    },\r\n\r\n    // Action(Animation etc) for every block\r\n   assembleBlockAction : function(){\r\n        switch(this.blocktype){\r\n            case BlockType.Empty:\r\n                return cc.moveTo(0,this.node.getPosition());\r\n\r\n            case BlockType.Trapdor:\r\n                return cc.moveTo(1, cc.p(this.node.getPositionX(), this.node.getPositionY()-100))\r\n        }\r\n        \r\n    },\r\n\r\n    // Part of animation see above\r\n    deform: function(){\r\n        \r\n    },\r\n\r\n    destroy: function(){\r\n        this.node.destroy();\r\n    },\r\n\r\n    setBlocked: function(bool){\r\n        this.isBlocked = bool;  \r\n    },\r\n    \r\n    isBlocked: function(){\r\n        return this.isBlocked;  \r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}